{"ast":null,"code":"var _jsxFileName = \"/Users/lawbindpandey/Law/React1/my-portfolio/frontend/src/components/ThemeToggle.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeToggle = () => {\n  _s();\n  const [darkMode, setDarkMode] = useState(false);\n\n  // Check local storage or system preference for dark mode\n  useEffect(() => {\n    const isDarkMode = localStorage.getItem('darkMode') === 'true';\n    setDarkMode(isDarkMode);\n  }, []);\n\n  // Toggle dark mode\n  const toggleDarkMode = () => {\n    const newDarkMode = !darkMode;\n    setDarkMode(newDarkMode);\n    localStorage.setItem('darkMode', newDarkMode);\n\n    // Apply dark mode class to the root element\n    if (newDarkMode) {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: toggleDarkMode,\n    className: \"p-2 rounded-full bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200\",\n    children: darkMode ? 'üåô' : '‚òÄÔ∏è'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeToggle, \"n2P3coCVngntCnyS/Nqj+dgR7+U=\");\n_c = ThemeToggle;\nexport default ThemeToggle;\nvar _c;\n$RefreshReg$(_c, \"ThemeToggle\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ThemeToggle","_s","darkMode","setDarkMode","isDarkMode","localStorage","getItem","toggleDarkMode","newDarkMode","setItem","document","documentElement","classList","add","remove","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/lawbindpandey/Law/React1/my-portfolio/frontend/src/components/ThemeToggle.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst ThemeToggle = () => {\n  const [darkMode, setDarkMode] = useState(false);\n\n  // Check local storage or system preference for dark mode\n  useEffect(() => {\n    const isDarkMode = localStorage.getItem('darkMode') === 'true';\n    setDarkMode(isDarkMode);\n  }, []);\n\n  // Toggle dark mode\n  const toggleDarkMode = () => {\n    const newDarkMode = !darkMode;\n    setDarkMode(newDarkMode);\n    localStorage.setItem('darkMode', newDarkMode);\n\n    // Apply dark mode class to the root element\n    if (newDarkMode) {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n    }\n  };\n\n  return (\n    <button\n      onClick={toggleDarkMode}\n      className=\"p-2 rounded-full bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200\"\n    >\n      {darkMode ? 'üåô' : '‚òÄÔ∏è'}\n    </button>\n  );\n};\n\nexport default ThemeToggle;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;;EAE/C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMO,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,KAAK,MAAM;IAC9DH,WAAW,CAACC,UAAU,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMG,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,WAAW,GAAG,CAACN,QAAQ;IAC7BC,WAAW,CAACK,WAAW,CAAC;IACxBH,YAAY,CAACI,OAAO,CAAC,UAAU,EAAED,WAAW,CAAC;;IAE7C;IACA,IAAIA,WAAW,EAAE;MACfE,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;IAChD,CAAC,MAAM;MACLH,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC;IACnD;EACF,CAAC;EAED,oBACEf,OAAA;IACEgB,OAAO,EAAER,cAAe;IACxBS,SAAS,EAAC,gFAAgF;IAAAC,QAAA,EAEzFf,QAAQ,GAAG,IAAI,GAAG;EAAI;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEb,CAAC;AAACpB,EAAA,CA/BID,WAAW;AAAAsB,EAAA,GAAXtB,WAAW;AAiCjB,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}